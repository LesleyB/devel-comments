# README

CONTENTS

This repo contains a bunch of related stuff: 

* IO::Capture::Sayfix
* IO::Capture::Tellfix
* Test::Hump
* Acme::Prime
* Devel::Hump


IO::Capture::Sayfix

	IO::Capture::Tie_STDx 0.05 contains a bug 
		that prevents it from working properly with feature 'say'. 
	The bug has been reported to the author. 
	Meanwhile, Sayfix fixes it, I hope in a fashion 
		that plays nice with any future release, fixed or not. 

IO::Capture::Tellfix

	IO::Capture::Tie_STDx 0.05 does not support method TELL 
		on the FHs it captures. 
	This disrupts Smart::Comments, 
		which uses tell(*STDOUT) || tell(*STDERR) 
		to decide whether to print a newline before its own output. 
	This issue has not yet been reported to the author. 
	Meanwhile, Tellfix fixes it. 

Test::Hump

	Although far from complete, 
		Test::Hump is now in somewhat of a working state. 
	The basic concept is that the test script sets up all test data 
		inside a big HoHish structure, then passes that to check(). 
	Test::Hump runs, using Test::More::subtest(), a small suite of tests. 
	Test parameters are retained from test to test, 
		so they don't need to be respecified. 
	
	Test inputs supported: 
		-argv				@ARGV
		-env				%ENV			# TODO	
		-inparms			ordinary arguments to code under test
	
	Outputs tested: 
		-return				ordinary return value from code under test
		-stdout				STDOUT captured
		-stderr				STDERR captured
		-evalerr			$@ (code under test run inside an eval block)
	
	Various ways of checking outputs are provided, on the theory that
		test script author may want some "looseness" here. Example: 
			Code under test emits an error to STDERR. Author may later alter
			the text of that error in a minor way. What's important is that
			STDERR is captured and checked to see that it contains key words
			and that an error is printed. 
			Exact match not desired; a minor change would break its test. 
	
	Rational defaults are provided: 
		If test author doesn't expect an evalerr but gets one, test fails. 
		If test author specifies a regex to test STDOUT against
			but doesn't say how many times it must match, 
			it must match at least once. 
	
	Further rationale in notes/manifesto.txt
	
Acme::Prime

	Teddy bear module intended to do all sorts of funny stuff;
		target for Test::Hump development. 

Devel::Hump
	
	Please ignore this for now; it doesn't do anything yet. 
	
	Test::Hump is developed to support testing of Devel::Hump so, 
		the needs of the latter drive the former. 
	
	However, I hope that Test::Hump will be much more general. 
		It is not intended to be bound to Devel::Hump. 
		
CONTRIBUTORS

All of this stuff is FOSS, Artistic License 2.0. 
Contributions and criticism, hard or soft, highly welcome. 
Chatterbox, email, wiki, push, or throw it over the transom. 
		
-Xiong Changnian <xiong@xuefang.com> 2010-05-26 15:37:17

