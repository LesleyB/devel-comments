Readonly my 'RETURN'     => 'RETURN';    # normal return
Readonly my 'OUT'     => 'OUT';       # STDOUT
Readonly my 'STRING'         => 'STRING';    # exact output (if known)
Readonly my 'REGEX'          => 'REGEX';     # regex output
Readonly my 'MATCHES'        => 'MATCHES';   # number of matches
Readonly my 'LINES'          => 'LINES';     # number of lines
Readonly my 'ERR'     => 'ERR';       # STDERR

#       ARGV        simulated command line arguments
#       OPT         \%options as returned by Getopt::Long::GetOptions()
#       DISP        $dispatch as found by dispatch table
#       RETURN      normal return from subroutine execution
#       OUT         STDOUT from normal execution
#           STRING      exact output
#           REGEX       [ qw{ foo bar } ] choice words from output
#           LINES       number of lines
#       ERR         STDERR from normal execution
#           subkeys as above

my @test_data       = (
#   { 
#       ARGV        => [],                          # no arguments
#       OPT         => {                        },
#       DISP        => q{default},
#       OUT         => q{hump: Shell unimplemented},
#   },

#   { 
#       ARGV        => [ '-n'                   ],  # bad; no arg to option
#       OPT         => {                        },  
#       DISP        => q{unknown},
#       OUT         => q{},
#       ERR         => q{Option n requires},
#   },

    { 
        ARGV        => [ '-h'                   ],  # usage line
        OPT         => { h  => 1                },  
        DISP        => q{h},
        RETURN      => 1,                           # perlish success
        OUT         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{ usage hump help } ],
            MATCHES     => 4,
            LINES       => 2,
        },
        ERR         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{} ],
            MATCHES     => 0,
            LINES       => 0,
        },
    },

    { 
        ARGV        => [ '--usage'              ],  # same as -h
        OPT         => { h  => 1                },  
        DISP        => q{h},
        RETURN      => 1,                           # perlish success
        OUT         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{ usage hump help } ],
            MATCHES     => 4,
            LINES       => 2,
        },
        ERR         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{} ],
            MATCHES     => 0,
            LINES       => 0,
        },
    },

    { 
        ARGV        => [ '-hh'                  ],  # all options help
        OPT         => { h  => 2                },  
        DISP        => q{h},
        RETURN      => 1,                           # perlish success
        OUT         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{ usage options shell hump help } ],
            MATCHES     => 4,
            LINES       => 2,
        },
        ERR         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{} ],
            MATCHES     => 0,
            LINES       => 0,
        },
    },

    { 
        ARGV        => [ '--help'               ],  # same as -hh
        OPT         => { h  => 2                },  
        DISP        => q{h},
        RETURN      => 1,                           # perlish success
        OUT         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{ usage options shell hump help } ],
            MATCHES     => 4,
            LINES       => 2,
        },
        ERR         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{} ],
            MATCHES     => 0,
            LINES       => 0,
        },
    },

    { 
        ARGV        => [ '-hhh'                 ],  # man page
        OPT         => { h  => 2                },  
        DISP        => q{h},
        RETURN      => 1,                           # perlish success
        OUT         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{ usage options shell hump help } ],
            MATCHES     => 4,
            LINES       => 2,
        },
        ERR         => {
            STRING      => [ q{} ],
            REGEX       => [ qw{} ],
            MATCHES     => 0,
            LINES       => 0,
        },
    },


#   { 
#       ARGV        => [ 'foobar'               ],  # bad argument
#       OPT         => {                        },  
#       DISP        => q{unknown},
#       OUT         => q{Usage:},
#   },
    
);
