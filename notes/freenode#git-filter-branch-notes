<ToxicFrog> If you want something more like cherry-pick, I have no idea, sorry
<alus> well I'll try that some day.
<ToxicFrog> The idea with git svn is that you should be able to commit from git to svn as well as pull from svn to git, so stuff like that may not be supported at all.
* leavittx_ has quit (Ping timeout: 240 seconds)
<alus> doees it actually affect the giv repo other than the changes it pulls in from svn?
* leavittx has quit (Ping timeout: 240 seconds)
<alus> I mean, it has to store the svn repo url somewhere. does that get committed to the git repo?
<fr0sty> level09: you can't reset a bare repository
* Textmode (~boneidle@adsl-syd-4-202.ozonline.com.au) has joined #git
<sitaram> fr0sty: well you can, with plumbing commands, but it isn't pretty :)
<level09> what do I do then ?
* frakturfreak has quit (Ping timeout: 264 seconds)
<fr0sty> level09: git push -f origin +master
* frakturfreak (fraktur@unaffiliated/frakturfreak) has joined #git
* hipe__ (~hipe@adsl-99-40-250-147.dsl.sfldmi.sbcglobal.net) has joined #git
<level09> ! [remote rejected] master -> master (non-fast-forward)
<level09> error: failed to push some refs to ..
<level09> :(
* dreiss (~dreiss@76.77.191.123) has joined #git
* spaceonline (~spaceonli@189.107.91.130) has joined #git
* vu3rdd has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
* girishr (~girishr@117.192.10.136) has joined #git
* starcoder|Svr (~elijah@unaffiliated/starcoder) has joined #git
* raichoo (~raichoo@i577AEC73.versanet.de) has joined #git
* drubies has quit (Remote host closed the connection)
* freimatz has quit (Ping timeout: 276 seconds)
* priidu has quit (Ping timeout: 240 seconds)
* drubies (~drubies@70-89-224-2-BusName-panjde.hfc.comcastbusiness.net) has joined #git
* codeshepherd has quit (Quit: codeshepherd)
<fr0sty> if you have access to the remote machine, try unsetting receive.denyNonFastForwards temporarily
* slonopotamus has quit (Ping timeout: 240 seconds)
<level09> then push again ?:
* aresnick has quit (Ping timeout: 260 seconds)
<level09> where is that setting ? in .git/config ?
* keyvan has quit (Read error: Connection reset by peer)
* Joeconyers has quit (Ping timeout: 276 seconds)
* keyvan (~keyvan@dslc-082-083-107-052.pools.arcor-ip.net) has joined #git
<fr0sty> yes, push again, in reponame.git/config in the remote repostitory.
<level09> thanks i'm gonna try that
* intripoon has quit (Ping timeout: 240 seconds)
* WebDragon (~webdragon@c-71-58-29-3.hsd1.de.comcast.net) has joined #git
* kenichi (~kenichi@c-24-22-29-11.hsd1.or.comcast.net) has joined #git
* Unode is now known as _Unode
<dennda> win2
<level09> that worked !! :DD
* dreiss has quit (Ping timeout: 240 seconds)
<level09> fr0sty: thanks, is there any downsides for what I did  ?
* t0rc has quit (Quit: Leaving)
* curtana has quit (Remote host closed the connection)
<fr0sty> anyone else who has previously pulled from the remote will have to jump through some hoops to recover this.
<fr0sty> and leaving denyNonFastForward = false will allow anyone else to do the same thing in the future.
<fr0sty> level09: man git-rebase and looke at 'RECOVERING FROM UPSTREAM REBASE' for an explaination of recovery steps.
<Gitbot> level09: the git-rebase manpage can be found at http://git.or.cz/man/git-rebase
* curtana (~sam@cpc2-oxfd12-0-0-cust549.oxfd.cable.ntl.com) has joined #git
<level09> thanks ! really helpful
* kenyon has quit (Read error: Operation timed out)
* ereslibre_laptop (~ereslibre@211.Red-88-14-109.dynamicIP.rima-tde.net) has joined #git
* ereslibre_laptop has quit (Changing host)
* ereslibre_laptop (~ereslibre@kde/ereslibre) has joined #git
* ponzao____ (vtmartti@melkinpaasi.cs.helsinki.fi) has joined #git
<level09> fr0sty: when adding new files to .gitignore , is it right to run git rm --cached . to remove all tracked files from cache ?
* ereslibre has quit (Remote host closed the connection)
<curtana> level09, check out git-clean
* warthog9 has quit (Ping timeout: 252 seconds)
<level09> curtana: git clean will physically delete the files
<level09> I want to keep these files , while untracked
* psoo has quit (Ping timeout: 248 seconds)
* ToxicFrog has quit (Ping timeout: 276 seconds)
* sh1mmer has quit (Quit: sh1mmer)
<curtana> oh
* hohoho (~hohoho@ntkngw227224.kngw.nt.ftth.ppp.infoweb.ne.jp) has joined #git
* ToxicFrog (~ToxicFrog@2607:f2c0:f00e:500:222:15ff:fe91:b24c) has joined #git
* _Unode is now known as Unode
* kenyon (~kenyon@2001:470:1f04:4ef::2) has joined #git
* keyvan has quit (Read error: Operation timed out)
* spaceonline has quit (Read error: Connection reset by peer)
* steveire_ (~quassel@conference/akademy/x-emlgicatzmninnkb) has joined #git
* steveire_ has quit (Changing host)
* steveire_ (~quassel@kde/skelly) has joined #git
* jony has quit (Ping timeout: 265 seconds)
* marc_kdab has quit (Read error: Connection reset by peer)
* marc_kdab (~marc@tmo-108-232.customers.d1-online.com) has joined #git
* Joeconyers (~Joe@ool-182fafef.dyn.optonline.net) has joined #git
* keyvan (~keyvan@dslc-082-083-107-052.pools.arcor-ip.net) has joined #git
* andrewl has quit (Quit: andrewl)
* Nickeeh (~Nick@dhcp-077-248-076-148.chello.nl) has joined #git
* Nemurenai has quit (Quit: /* deeper magic */)
* sh1mmer (~croucher@173-147-72-230.pools.spcsdns.net) has joined #git
* steffkes has quit (Quit: Verlassend)
* kpreid (~kpreid@c-67-180-21-133.hsd1.ca.comcast.net) has joined #git
* rubydiamond (~rubydiamo@unaffiliated/rubydiamond) has joined #git
* Khisanth has quit (Ping timeout: 264 seconds)
<level09> anyway , is it safe to run git rm --cached .
* dsdeiz (~personal@acl1-730bts.gw.smartbro.net) has joined #git
* dsdeiz (~personal@acl1-730bts.gw.smartbro.net) has left #git
* coderdad (~coderdad@66.210.200.130) has joined #git
* hobodave (~hobodave@pdpc/supporter/professional/hobodave) has joined #git
<shruggar> "safe" is a loaded term. There are situations where it can lose data, but you are most likely not in that situation
* barismetin has quit (Remote host closed the connection)
<shruggar> for example, if you git-add'ed a file, didn't commit, then removed the physical copy of it, git rm --cached would remove the only remaining trace of the file. Other than that, you're safe
* stringo0 (~string@CPE001346cbe31b-CM00111ae502a8.cpe.net.cable.rogers.com) has joined #git
<shruggar> though even then, git-fsck could find it, just not in a friendly manner
* bewst1 (~bewst1@207-172-223-249.c3-0.smr-ubr3.sbo-smr.ma.static.cable.rcn.com) has joined #git
<shruggar> most git commands are safe
* coderdad has quit (Remote host closed the connection)
* Now talking on #git
* Topic for #git is: 1.7.1.1 | Homepage: http://git-scm.com | Everyone asleep or clueless? Try git@vger.kernel.org | Channel log http://tinyurl.com/gitlog | Mailing list archives: http://tinyurl.com/gitml | Gits on git: http://tinyurl.com/gittalks | Pastebin: http://gist.github.com/
* Topic for #git set by wereHamster!~tomc@caurea.org at Wed Jun 30 04:24:16 2010
<_Vi> StuckMojo, The first thing that can to is to split "actual code" from "supplementary stuff".
 
* Loaded log from Fri Jul  9 06:06:45 2010
 
* Now talking on #git
* Topic for #git is: 1.7.1.1 | Homepage: http://git-scm.com | Everyone asleep or clueless? Try git@vger.kernel.org | Channel log http://tinyurl.com/gitlog | Mailing list archives: http://tinyurl.com/gitml | Gits on git: http://tinyurl.com/gittalks | Pastebin: http://gist.github.com/
* Topic for #git set by wereHamster!~tomc@caurea.org at Wed Jun 30 04:24:16 2010
* khmarbaise (~khmarbais@p508A56F2.dip.t-dialin.net) has joined #git
<StuckMojo> if you can believe that
<StuckMojo> _Vi: that's a good suggestion
<StuckMojo> "git filter-branch --index-filter 'git rm --cached --ignore-unmatch  path/to/your/unneeded/file'"
<_Vi> StuckMojo, If you need to store which version of your project requires which infrastructure, you can make "stuff" repository a submodule of "code" repository. You can even tune it to checkout automatically (using scripts or somehow).
<xiong> I have a folder, /notes, which contains documentation for the project as a whole. I don't want changes to it to be lost when checking out branches, since files in it pertain to the entire project. At first I didn't track it; but then, of course, it didn't push. Now I track it. What do I do?
<StuckMojo> what's the path, if it's boost_1_42_0.zip which has already been deleted from the tip?
<_Vi> StuckMojo, Just "boost_1_42_0.zip".
<_Vi> StuckMojo, It will remove it from earlier revisions.
* Tureba (bb175094@gateway/web/freenode/ip.187.23.80.148) has joined #git
<StuckMojo> umm...i should be doing this on the main central repo, eh?
<_Vi> StuckMojo, (This is one of famous git's "rewriting history" aspect).
* ChUrP has quit (Read error: Connection reset by peer)
* ChUrP1 (~churp@95.33.169.21) has joined #git
* stringoO (~sixstring@CPE001346cbe31b-CM00111ae502a8.cpe.net.cable.rogers.com) has joined #git
<StuckMojo> since i imagine these destructive changes can't be "pulled" ...
<_Vi> StuckMojo, You can then "push --force" it to the main repository. But it will not remove the bloat there.
<_Vi> StuckMojo, (After that the bloat will only eventually (month or some) expire and vanish).
<_Vi> StuckMojo, This all is to prevent data loss even when using things like "filter-branch".
* Olly__ (~Olly@94-193-96-179.zone7.bethere.co.uk) has joined #git
* iravid (~iravid@87.69.170.139) has joined #git
* __nate__ has quit (Quit: Leaving)
<_Vi> StuckMojo, But removing "boost_1_42_0.zip", but leaving "boost_1_43_0.zip" looks like half-measure. When there will be boost_1_44_0.zip you will want to remove boost_1.43_0.zip.
<_Vi> StuckMojo, And rewriting branch is not thing that should be planned or executed periodically. It is clear thing that it should be outside repository.
* hohoho has quit (Ping timeout: 276 seconds)
<StuckMojo> yeah i'm pulling both
* Heimidal has quit (Remote host closed the connection)
<StuckMojo> i'll keep some of the contents of it instead, which i've already extracted and added earlier
<StuckMojo> specifically the header files needed for my project
* stringoO has quit (Ping timeout: 248 seconds)
<StuckMojo> i could do this all much easier though
<StuckMojo> just checkout, remove crap. re-init
<StuckMojo> as i said, no real changes in here yet
* ehabkost (~ehabkost@2001:1291:203:0:219:d2ff:fe05:2a6d) has joined #git
<_Vi> StuckMojo, This does not preserve history.
<StuckMojo> yeah i mean there really isn't any history of note yet
<StuckMojo> hmmm
<StuckMojo> they're still there
<adrien> _Vi: about external storage, I removed the smudge filter, it happens that it's really better this way because I don't need all the binary files: now I wget them on demand
<adrien> actually, it worked better than what I was looking for ;-)
* dwmw2_gone is now known as dwmw2
<_Vi> adrien, Should this functionality be supported more officially? Blobs in repository is a common problem.
<StuckMojo> _Vi: http://psql.privatepaste.com/544681fcab
<_Vi> StuckMojo, Still both 1_42 and 1_43 there.
<StuckMojo> yeah
<StuckMojo> i'm confused
<_Vi> filter-branch failed with error. Add "-f" to it.
<StuckMojo> oh btw, i didn't get the error about new backup the first time i did it
* tstclair (~tstclair@24-196-94-16.dhcp.mdsn.wi.charter.com) has joined #git
<_Vi> StuckMojo, "git filter-branch" stores backup pointer to prevent loss or "not filtered" version.
<adrien> _Vi: hard to say: I haven't really thought about it but it turns out it works pretty well, I think I'm going to use it a bit more and develop with other people and then ask them what they think about it
* Yuuhi has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
<StuckMojo> http://psql.privatepaste.com/719b0e61ed
<StuckMojo> still there
<_Vi> StuckMojo, You need to remove this backup before new filter branch. Also you need to remove it to clean up the space.
<adrien> also, currently, my files are served by an external httpd on a different folder but it shouldn't be a problem to store them directly in the .git folder
* sunn (sunn@unaffiliated/sunn) has joined #git
<_Vi> "WARNING: Ref 'refs/heads/master' is unchanged" - means nothing changed.
<StuckMojo> does it matter that i have 2 branches?
<_Vi> StuckMojo, You should rewrite both branches.
* jaw_vvd1 (~jaw@78-70-125-139-no170.tbcn.telia.com) has joined #git
* malumalu has quit (Ping timeout: 240 seconds)
<_Vi> StuckMojo, Checkout the second and do the same command there.
<xiong> Is this a silly thing to do? I make notes; when I check out another branch, I still want to have those notes available, as they were. I'd like the folder tracked but essentially, all on a single branch. 
<StuckMojo> i'm in a bare repo, will checkout create a working copy?
<_Vi> adrien, Also "rsync" should be better protocol for this, I think. Especially it's "-y" option.
<adrien> yeah, true ;-)
* tcurdt has quit (Ping timeout: 248 seconds)
* fauxhawk has quit (Quit: leaving)
<jaw_vvd1> hi, when pulling a branch (pull [his-dir] [branch]) from a colleague - is it possible to include his full commit log so I can see what he changed with "log -p" ?
* fauxhawk (faux@devio.us) has joined #git
<adrien> (in my current case it doesn't matter much because the files are .tar.xz and they're everything but rsync-friendly but in the general case, definitely)
<StuckMojo> damn. fatal: This operation must be run in a work tree
<_Vi> StuckMojo, try "git filter-branch ...... branch_name_here"
<_Vi> StuckMojo, (if "filter-branch" can run in bare repo at all)
* tcurdt (~tcurdt@89.246.67.229) has joined #git
<StuckMojo> fatal: ambiguous argument 'git rm --cached --ignore-unmatch boost_1_42_0.zip': unknown revision or path not in the working tree.
* Tommy[D] has quit (Ping timeout: 245 seconds)
<StuckMojo> sudo -u gitdaemon git filter-branch -f --index-filter queue_send_bug 'git rm --cached --ignore-unmatch boost_1_42_0.zip'
<_Vi> jaw_vvd1, This is the default.
<_Vi> StuckMojo, No.
* girishr has quit (Quit: ChatZilla 0.9.86 [Firefox 3.0.12/2009070611])
<jaw_vvd1> _Vi: I only get a "merged xxx into xxx" in my log
<_Vi> StuckMojo, sudo -u gitdaemon git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch boost_1_42_0.zip' queue_send_bug
<StuckMojo> ah
<StuckMojo> heh
<_Vi> jaw_vvd1, "gitk"?
* hagen (~irc@p548BB581.dip.t-dialin.net) has left #git
<StuckMojo> woot
<_Vi> StuckMojo, Now nice?
<StuckMojo> Rewrite 8562423b2e6e5c23935e37f8a6f519b692ee7a71 (2/8)rm 'boost_1_42_0.zip'
<StuckMojo> lots of those
<StuckMojo> which is promising
* beatak (~beatak@160.79.2.194) has joined #git
<jaw_vvd1> _Vi: thanks, looking at that!
<StuckMojo> do i need to put a branch in here anywhere? sudo -u gitdaemon rm -Rf refs/original && sudo -u gitdaemon git reflog expire --expire=now --all && sudo -u gitdaemon git gc --aggressive && sudo -u gitdaemon git prune "$@"
<_Vi> StuckMojo, No. "--all" means all branches.
<StuckMojo> yay! 42 gone
* shader (~user@66.162.9.208) has joined #git
<_Vi> StuckMojo, The last command (with gc, prune and friends) can be after all filter-branching is done.
* Tommy[D] (debian-tor@gentoo/developer/tommy) has joined #git
<shader> I'm trying to run git svn rebase, and I'm getting the error "didn't find newline after blob at /usr/lib/perl5/vendor_perl/5.10/Git.pm line 916." Is there anything I can do about it? Sometimes the problem just goes away.
<StuckMojo> 91M  .
* MattDiPasquale (~MattDiPas@209.48.76.98) has joined #git
* engla|GER is now known as engla
<xiong> Well, maybe I'm asking the wrong question. Where do you put project documentation so that it is available to collaborators and does not differ from branch to branch?
* bcrouse (~bcrouse@173-161-162-1-Philadelphia.hfc.comcastbusiness.net) has joined #git
* tcurdt has quit (Ping timeout: 260 seconds)
<StuckMojo> _Vi: thanks for the help!
* t0rc (~t0rc@unaffiliated/t0rc/x-5233201) has joined #git
* bcrouse (~bcrouse@173-161-162-1-Philadelphia.hfc.comcastbusiness.net) has left #git
<Ilari> Heh... Git over XMPP could be cool to have (even if its not useful)...
* malumalu (~max@p548206CF.dip0.t-ipconnect.de) has joined #git
* notjohn (~john@106.165.61.69.DED-DSL.fuse.net) has joined #git
* khmarbaise_ (~khmarbais@p508A56F2.dip.t-dialin.net) has joined #git
* khmarbaise has quit (Read error: Connection reset by peer)
* khmarbaise_ is now known as khmarbaise
* mapreduce (~ricky@isabella.cime.net) has left #git ("WeeChat 0.2.6")
* khmarbaise has quit (Client Quit)
* hipe (~hipe@173-10-44-57-Michigan.hfc.comcastbusiness.net) has joined #git
<IslandUsurper> xiong, wouldn't documentation change with a project? I'd expect to have documentation on all branches, and as development happens, appropriate changes are made to the documentation as well.
<IslandUsurper> on each* branch
<rkreis> Ilari, how is that not useful?
* ryanakca (~ryan@ubuntu/member/ryanakca) has joined #git
* apsysoev has quit (Quit: Leaving.)
* Ahri (~adam@93-97-29-15.zone5.bethere.co.uk) has left #git
<ryanakca> How  can I see what differences are in branch A, but yet to be merged into branch B (which branched from A)?
<ryanakca> s/differences/commits/
* fyigit has quit (Remote host closed the connection)
<xiong> Um, it's not entirely clear to me, IslandUsurper. Certainly, documentation progresses as the project progresses. But change on a single branch is specific; it's generally documented in comments next to code. Changes to my /notes folder; this is project-wide. I sort of imagine a Doc branch, which propagates to all others. --?
* aresnick (~aresnick@209-6-50-64.c3-0.smr-ubr1.sbo-smr.ma.cable.rcn.com) has joined #git
<shruggar> ryanakca: git diff $(git merge-base B A) A;
<ryanakca> shruggar: thanks
<shruggar> ryanakca, for commits instead of differences, replace "diff" with "log"
<xiong> IslandUsurper, In other words, if I create a feature branch, make some /notes, then lay that aside for a bit and check out a release branch, those /notes should be available -- but I certainly wouldn't want to merge most of the stuff from Feature-2 into Release-1. 
<shruggar> git log A...B ^B   might work too
* copelco (~copelco@h-66-166-135-210.atlngahp.static.covad.net) has joined #git
* freimatz has quit (Read error: Connection reset by peer)
* florianb (~florianb@89.204.155.226) has joined #git
<xiong> IslandUsurper, Not sure how to do this. I'm thinking that /notes should be in a subrepo somehow; that the main repo respects its contents -- ignores the folder but pushes it along. The other thought is to create a duplicate /notes-sync and a script that somehow maintains the newest state. 
<Ilari> rkreis: Dunno.
* florianb has quit (Client Quit)
<rkreis> sending a patch or so over xmpp would be quite cool
<rkreis> i guess it's more comfortable than having to manually apply some email or so you got
<Ilari> Or being able to share git repos ad-hoc in (W)LAN environment (I think there's already stuff like that).
<rkreis> that's also awesome
* Ryback_ (~ulisses@enlightenment/developer/ryback) has joined #git
<rkreis> totally taking advantage of git being decentralized :D
<rkreis> you could share projects without any kind of hosting
<rkreis> except for your im client
* EvanR-work has quit (Read error: Connection reset by peer)
<cbreak_work> you can already do that
<cbreak_work> get a local web server and host a dumb-http server
<Ilari> Well, if you have data transport capable of full-duplex transfer, you can write remote helper that uses it for smart transport (capability 'connect').
<IslandUsurper> xiong, ok. It sounds like we're talking about different kinds of documentation. I was thinking you would put the feature-specific documentaiton into the feature branch, and then when the feature is merged into master, all of that documentation goes with it, so it's available when a release is made
<xiong> IslandUsurper, That's rational. But I need a place to *remember* things; I can't control when I discover them. 
* EvanR-work (~evan@wsip-98-175-17-4.br.br.cox.net) has joined #git
* injekt (~injekt@boobies.injekt.net) has joined #git
* tvw has quit (Remote host closed the connection)
<shader> has anyone else had to deal with git-svn's fatal: write error: invalid argument, or didn't find newline after blob at Git.pm line 916?
* vu3rdd has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
<xiong> I can be working in a feature branch and discover something I need to do in a release branch; so I make a note. Or I run up to a point and say, Oh, *this* standard must be imposed on the entire project, starting now. 
<xiong> IslandUsurper, /notes is not public documentation; it's developer docs. 
<IslandUsurper> xiong, yeah, that's the difference in our thinking here. I guess a separate repo is what I'd recommend for you...
<xiong> I've been working on this project solo but I'm inviting collaborators. I need to be sure that some files -- like those setting project-wide standards -- are available to anybody who checks out any branch. 
<xiong> I can see the point of a Docs repo. But how do I "include" that in the main project repo?
* q0rban (~jsansbury@96.25.217.22) has joined #git
<xiong> This is where some sort of script comes to mind. 
* notgrim (~grim@201.22.211.36.dynamic.adsl.gvt.net.br) has joined #git
* ceez (~phyngers@32.97.110.52) has joined #git
<cbreak_work> or a submodule
<xiong> So, /notes appears in both the Docs repo and the main repo; and on each run of the script, the newest files are copied bidirectionally. 
* notgrim has quit ()
<xiong> I suppose a carefully-crafted rsync line would do it. 
* icwiener (~schwarzer@kde/developer/schwarzer) has joined #git
* gk has quit (Ping timeout: 264 seconds)
* scarabx has quit (Quit: This computer has gone to sleep)
* roop has quit (Read error: Connection reset by peer)
<xiong> cbreak_work, /me does study-up on "git submodule". 
* bdimcheff (~bdimcheff@c-68-40-169-250.hsd1.mi.comcast.net) has joined #git
* DrNick has quit (Ping timeout: 276 seconds)
* flazz (~franco@128.227.228.242) has joined #git
* RORgasm (~rorgasm@4.59.22.2) has joined #git
* simplechat (~simplecha@unaffiliated/simplechat) has joined #git
<xiong> cbreak_work, A submodule does seem to be the solution. I'll need much more study-up but I think you got it. 
<xiong> IslandUsurper, Thank you, too, for elucidating my thinking on the subject. 
* hendry (~hendry@webvm.net) has joined #git
<hendry> if i make a commit, and decide to go back before i made the commit, how do i do that?
<IslandUsurper> xiong, no problem
<Ilari> rkreis: Server + tools to find repositories + remote helper to establish connections by repository name.
<curtana> hedo you want to throw away all your work including the working tree?
<curtana> sorry, hendry
* EvanR-work has quit (Read error: Operation timed out)
* cannonball (~todd@unaffiliated/cannonball) has joined #git
<hendry> curtana: no, just get back to when it was "staged"
<curtana> git reset HEAD^
<_Vi> hendry, "git reset --soft HEAD^"
* MattDiPasquale has quit (Remote host closed the connection)
* shader has quit (Remote host closed the connection)
<hendry> curtana: thanks, just what i needed
* altrux (~altrux@rrcs-24-73-187-202.se.biz.rr.com) has joined #git
<xiong> cbreak_work, This makes sense. But the /notes folder has been, all along, part of the main repo. Is there a way to clone the main repo and discard all info about everything except /notes, rather than git init a new repo for the Notes submodule?
<xiong> -- meanwhile, discarding from the main repo all old info about /notes?
<xiong> Er, more generally, can the entire history of a file be deleted from a repo?
<curtana> hendry, if you intention is to fix up a mistake in a commit, you can add the fixups and do git commit --amend
* HG` has quit (Quit: Leaving.)
<curtana> xiong, by rewriting the history to exlude that file, yes
<curtana> git-filter-branch i think
<xiong> -- a sort of retroactive git ignore.
<xiong> curtana, /me does study up on that
<curtana> but anyone who has cloned the repo wil have to re-clone it
<xiong> curtana, That's why I'm asking my noob questions now, before I open the doors to collaborators. 
* tedoc2000 (~tedoc2000@209.118.191.162) has joined #git
<curtana> :)
* Colt (~dfgkdjfk@85.26.183.158) has joined #git
<xiong> I've moved very fast developing Perl apps under Ubuntu with Git. 2009 Feb, my platform was a Mac G3 running OS9. I have a lot of ground to cover still. 
<Colt> ebanij v rot
* EvanR-work (~evan@wsip-98-175-17-4.br.br.cox.net) has joined #git
* Colt (~dfgkdjfk@85.26.183.158) has left #git
* gbacon (~gbacon@67.58.77.138) has joined #git
* alezandro (~ab@199.sub-174-217-33.myvzw.com) has joined #git
* MattDiPasquale (~MattDiPas@209.48.76.98) has joined #git
* opalka has quit (Quit: Leaving)
* j0shua (403d0a44@gateway/web/freenode/ip.64.61.10.68) has joined #git
* tomsdale (~quassel@modemcable038.68-70-69.static.videotron.ca) has joined #git
<xiong> Yes, curtana, that's the ticket. man git-filter-branch: "Suppose you want to remove a file ... from all commits" and "Thus you can, e.g., turn a library subdirectory into a repository of its own."
<Gitbot> Yes: the git-filter-branch manpage can be found at http://git.or.cz/man/git-filter-branch
* rgr (~user@85.183.18.158) has joined #git
<xiong> I suppose rm -r /notes will remove the whole folder from all history; first clone main repo and discard everything else. Then define Notes as a submodule. Oooh, shiny!
* krazykrivda (94b10064@gateway/web/freenode/ip.148.177.0.100) has joined #git
<Ilari> Hmmh... gitjour uses wrapper executable (that only supports clone and pull) instead of remote helper...
* Yuuhi (benni@p5483BD90.dip.t-dialin.net) has joined #git
* marc_kdab has quit (Ping timeout: 265 seconds)
* hagabaka (~quassel@unaffiliated/hagabaka) has joined #git
* spearce (~spearce@nat/google/x-kgzqxrdaiopuomdw) has joined #git
* ortuna (~ssingh@173-10-134-17-BusName-washingtonDC.hfc.comcastbusiness.net) has joined #git
* kukks (~Guenter@p57A08F67.dip0.t-ipconnect.de) has joined #git
<mcayland> spearce: you are my hero - git smart http rocks :)
* smorg has quit (Ping timeout: 248 seconds)
<xiong> What is the difference between git-clone --no-hardlinks and plain old cp?
<Ilari> Hi spearce... BTW: is that +q on webchat needed?
* smorg (~quassel@174-20-152-71.mpls.qwest.net) has joined #git
* dreiss (~dreiss@76.77.191.123) has joined #git
* ajpi (~ajpiano@mail.portfolioshop.com) has joined #git
* ianmcorvidae has quit (Ping timeout: 240 seconds)
* kpreid has quit (Quit: kpreid)
<spearce> Ilari: i have no idea what you are talking about
<injekt> xiong: it copies the file objects
<Ilari> spearce: 0 - #git: ban *!*@gateway/web/freenode/* [by ChanServ!ChanServ@services., 315189 secs ago]  (quiets list).
<xiong> injekt, I don't understand. If I cp the whole repo -- the working files as well as the /.git folder -- what is left behind?
* TheNewAndy has quit (Quit: Ex-Chat)
<injekt> xiong: Oh I see what you mean now, sorry. That's a good question, I'm not sure
<spearce> Ilari: no clue why we have that ban
<spearce> although i'm a mod here, i don't moderate...
<Ilari> spearce: Ocassional spam run from webchat...
<xiong> Er, I should probably say, when cloning a local repo. 
* Chaser_ (~Kiran@client-81-105-75-191.lds-bng-011.adsl.virginmedia.net) has joined #git
* ianmcorvidae (~ianmcorvi@pool-96-240-211-240.spfdma.east.verizon.net) has joined #git
* ianmcorvidae has quit (Changing host)
* ianmcorvidae (~ianmcorvi@fsf/member/ianmcorvidae) has joined #git
* smorg has quit (Ping timeout: 264 seconds)
<injekt> xiong: The --no-hardlinks switch makes git use real file copies instead of hardlinking when cloning a local repository
* whaley (~whaley@c-71-229-212-21.hsd1.co.comcast.net) has joined #git
* smorg (~quassel@174-20-152-71.mpls.qwest.net) has joined #git
<xiong> injekt, That I understand. But then, cp does real copying too. :)
<injekt> xiong: Which makes it no different from cp, from this angle
<injekt> ^
<injekt> :)
<IslandUsurper> xiong, clone will still set the local repo as the remote, but cp will keep the same remotes
<xiong> :D
<injekt> That's the only change I can think of, too
* ajpi is now known as ajpiano
<xiong> IslandUsurper, So git clone --no-hardlinks creates something that is a slave of the original, so to speak. 
<IslandUsurper> xiong, right, just like a regular clone
<Ilari> spearce: I don't even know who set the ban. Probably someone from freenode staff.
<xiong> Never cloned at all yet. Learning stuff all the time. 
* DrNick (~Nick@c-71-227-253-159.hsd1.wa.comcast.net) has joined #git
<xiong> So then, I want to cp my repo, just as it is, twice: Once for safety backup, once for shrinking down into only /notes, which I will later reintegrate as a submodule after shrinking the main repo to exclude /notes. I think I've got it. 
* pallaert has quit (Ping timeout: 240 seconds)
<shruggar> is there an argument to clone or similar which says "use this other repository for objects if possible, rather than fetching"? or do I need to clone the "other repos", then remove all branches, then add a remote, then fetch, to get the same result?
* dajero (~jeroendeh@84.28.139.74) has joined #git
<curtana> str1ngs, the alternates mechanism. you'd have to do it after clone though
* ProperN[out] (haruspex@adsl-71-1-248.cae.bellsouth.net) has joined #git
* hohoho (~hohoho@ntkngw227224.kngw.nt.ftth.ppp.infoweb.ne.jp) has joined #git
* ProperN[out] has quit (Changing host)
* ProperN[out] (haruspex@wikipedia/ProperNoun) has joined #git
