DEVELOPER       2010-07-10 07:44:30

Please read this file if you are a project developer. 
Development is open to anyone with an interest. 

See also: README, WORKFLOW, VERSIONS. 
You may also want to have a look at all files in /notes. 

= Conventions =

* 4 columns per indent; no hard tabs
* 78 columns per line max
* line endings: LF (*nix-ish)
* K&R bracketing and indentation; uncuddled elses
* /notes files are generally set to word-wrap
* block comments introduce all subroutines and sections (see /notes/scrap)
* please don't be clever

= Guidelines =

This project is based on Smart::Comments ('Vanilla') by Damian Conway. 
In a similar spirit, this is intended as a lightweight debugging tool. 
Please avoid loading modules. 
Only core modules are allowed. 

Vanilla requires perl version >= 5.008; let's try to stick with that. 
use feature 'say' is only for development. 

= Folders =

Please use the word 'folder' in docs. It is exactly equivalent (under *nix) 
    to 'directory' and is shorter as well. In code, 'dir' is acceptable. 

Each folder contains a file, '@THISFOLDER', which defines its contents and role.
Please do not create any new, tracked top-level folders.

Here is a summary of the folder structure: 

/file           support, data, config, log, graphic, binary files
                    Please develop graphics files in an untracked folder
                        and reserve /file for finished tasks. 

/lib            Perl modules
/notes          developer notes; you may add to these
                    Changes to this folder are propagated among branches.
/pack           release packages and folders to be zipped up
                    Please name subfolders according to version numbers.

/run            executable Perl scripts
                    Any project script (end-user) goes here.
    /not-t      tests not ready for testing
    /t          tests ready for testing, whether passing or not
    /util       utility scripts for development


= Files =

Selected files: 

/lib/Smart/Comments/Any.pm
    The deliverable Perl module

/file/workflow/workflow.svg
    Graphic map of Git VCS workflow for this project

/notes/general-notes
    Random development notes

/notes/scrap
    Perl code boilerplates; please use and add to these

/run/util/regress
    Clones an ::Any test and makes it load Vanilla instead

/run/util/sync-notes
    Synchronizes /notes and (untracked) /.notes

